<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Brain Blog Blog</title>
        <link>https://tchez.dev/pt/blog</link>
        <description>Brain Blog Blog</description>
        <lastBuildDate>Wed, 11 Jun 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>pt</language>
        <item>
            <title><![CDATA[Você sabe o que são métodos mágicos em Python? Dica: Você usa todos os dias!]]></title>
            <link>https://tchez.dev/pt/blog/dunder-methods</link>
            <guid>https://tchez.dev/pt/blog/dunder-methods</guid>
            <pubDate>Wed, 11 Jun 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Neste artigo, vamos explorar o fascinante mundo dos métodos mágicos em Python, seu propósito e como eles podem aprimorar sua experiência de codificação.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Dunder Methods" src="https://tchez.dev/pt/assets/images/article-og-8dfb080971478ddeca220d443fe31cca.png" width="1260" height="720" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="você-sabe-o-que-são-métodos-mágicos-em-python-dica-você-usa-todos-os-dias">Você sabe o que são métodos mágicos em Python? Dica: Você usa todos os dias!<a href="https://tchez.dev/pt/blog/dunder-methods#voc%C3%AA-sabe-o-que-s%C3%A3o-m%C3%A9todos-m%C3%A1gicos-em-python-dica-voc%C3%AA-usa-todos-os-dias" class="hash-link" aria-label="Link direto para Você sabe o que são métodos mágicos em Python? Dica: Você usa todos os dias!" title="Link direto para Você sabe o que são métodos mágicos em Python? Dica: Você usa todos os dias!">​</a></h2>
<p>Há alguns anos, quando estava aprendendo a usar o framework Django (o primeiro framework que aprendi), me deparei com uma característica peculiar das classes Python: o método construtor deve seguir um padrão específico — ele deve ser identificado por underscores duplos (__) antes e depois da palavra <code>init</code>. Isso me chamou a atenção; por que essa estrutura específica?</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">MinhaClasse</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__init__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># Este é o método construtor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><br></span></code></pre></div></div>
<p>Tentando entender de onde vieram essas funções 'diferentes', descobri que no mundo do Python, existem vários métodos que seguem esse padrão 'dunder' (um apelido derivado de Double UNDERscore). Esses métodos não são apenas comuns — eles são especiais e fundamentais para a linguagem, conhecidos como dunder methods ou métodos mágicos.</p>
<p>OK, mas o que esses métodos realmente fazem? O que os torna 'mágicos'?</p>
<p>Essas foram algumas das perguntas que me levaram a estudá-los mais profundamente e a escrever este artigo. Espero que você goste :)</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="o-que-são-dunder-methods">O que são dunder methods?<a href="https://tchez.dev/pt/blog/dunder-methods#o-que-s%C3%A3o-dunder-methods" class="hash-link" aria-label="Link direto para O que são dunder methods?" title="Link direto para O que são dunder methods?">​</a></h2>
<p>No mundo da programação, muitas vezes nos deparamos com conceitos que parecem complexos à primeira vista, mas que, uma vez compreendidos, fazem total sentido. Um ótimo exemplo disso em Python são os <em>dunder methods</em>.</p>
<p>Então, o que exatamente são esses métodos? Como mencionado anteriormente, a palavra 'dunder' refere-se à notação de underscore duplo no início e no final dos nomes desses métodos especiais. Por exemplo, <code>__init__</code> para um construtor de classe, ou <code>__str__</code> para a representação em string de um objeto.</p>
<blockquote>
<p>P.S. Alguns puristas pythonicos não gostam de chamar o método <code>__init__</code> de construtor, pois tecnicamente ele é um inicializador. No entanto, para simplificar, vamos nos referir a ele como construtor neste artigo.</p>
</blockquote>
<p>Esses métodos não são chamados diretamente pelo nome. Em vez disso, o Python os chama internamente quando certas ações são realizadas. Por exemplo, quando adicionamos dois objetos usando o operador <code>+</code>, o Python chama internamente o método <code>__add__</code>, que lida com a lógica de adicionar um valor a outro.</p>
<blockquote>
<p>Ficou confuso? Vou dar alguns exemplos para facilitar!</p>
</blockquote>
<p>Imagine que você está construindo uma classe para representar um livro em uma biblioteca. Para fazer isso, você precisará implementar o método <code>__init__</code>, que atua como um construtor, configurando atributos iniciais como título, autor e contagem de páginas:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__init__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> titulo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> autor</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> paginas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo </span><span class="token operator">=</span><span class="token plain"> titulo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor </span><span class="token operator">=</span><span class="token plain"> autor</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas </span><span class="token operator">=</span><span class="token plain"> paginas</span><br></span></code></pre></div></div>
<p>O que acontece quando você tenta adicionar dois objetos <code>Livro</code>? Você pode esperar que eles se combinem de alguma forma, mas o Python não sabe como lidar com essa operação por padrão:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro1 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Primeiro Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor A"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">100</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro2 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Segundo Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor B"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">200</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1 </span><span class="token operator">+</span><span class="token plain"> livro2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<p>Isso levantará um <code>TypeError</code> porque o Python não sabe como adicionar dois objetos <code>Livro</code>. Este código irá gerar:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> TypeError</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> unsupported operand </span><span class="token builtin" style="color:rgb(189, 147, 249)">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> </span><span class="token operator">+</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Livro'</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">and</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Livro'</span><br></span></code></pre></div></div>
<p>Para fazer essa operação funcionar, você pode definir o método <code>__add__</code> na sua classe <code>Livro</code>. Este método especificará como dois objetos <code>Livro</code> devem ser adicionados. Por exemplo, você pode querer adicionar suas contagens de páginas:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__init__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> titulo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> autor</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> paginas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo </span><span class="token operator">=</span><span class="token plain"> titulo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor </span><span class="token operator">=</span><span class="token plain"> autor</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas </span><span class="token operator">=</span><span class="token plain"> paginas</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__add__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> other</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas </span><span class="token operator">+</span><span class="token plain"> other</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas</span><br></span></code></pre></div></div>
<p>Agora, quando você tenta adicionar dois objetos <code>Livro</code>, o Python chamará o método <code>__add__</code>, que neste caso somará a quantidade de páginas. É assim que você pode personalizar o comportamento dos operadores para suas próprias classes.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro1 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Primeiro Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor A"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">100</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro2 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Segundo Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor B"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">200</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1 </span><span class="token operator">+</span><span class="token plain"> livro2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: 300</span><br></span></code></pre></div></div>
<p><strong>Esse comportamento não se limita apenas ao operador de adição!</strong></p>
<p>Na verdade, a maioria dos operadores em Python pode ser personalizada usando dunder methods. Por exemplo, você pode definir como sua classe se comporta com o operador <code>==</code> implementando o método <code>__eq__</code>, ou com o operador <code>-</code> implementando o método <code>__sub__</code>. Um bom exemplo disso é o operador <code>in</code>, quando verificamos se algum <code>valor</code> está <code>in</code> uma <code>lista</code>, por baixo dos panos, o Python está chamando o método <code>__contains__</code> da classe lista, passando o <code>valor</code> como argumento. Veja o exemplo abaixo:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">minha_lista </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">4</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">3</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> minha_lista</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">minha_lista</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">__contains__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso também vai imprimir: True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">6</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> minha_lista</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">minha_lista</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">__contains__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">6</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso também vai imprimir: False</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="mais-exemplos-de-dunder-methods">Mais exemplos de dunder methods<a href="https://tchez.dev/pt/blog/dunder-methods#mais-exemplos-de-dunder-methods" class="hash-link" aria-label="Link direto para Mais exemplos de dunder methods" title="Link direto para Mais exemplos de dunder methods">​</a></h2>
<p>Agora que você tem uma compreensão básica do que são os dunder methods e como funcionam, vamos ver mais alguns exemplos de seu uso, ainda aplicados à classe <code>Livro</code>:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="__str__-customizando-prints"><code>__str__</code>: Customizando prints<a href="https://tchez.dev/pt/blog/dunder-methods#__str__-customizando-prints" class="hash-link" aria-label="Link direto para __str__-customizando-prints" title="Link direto para __str__-customizando-prints">​</a></h3>
<p>Seguindo o exemplo anterior, o que acontece quando você tenta imprimir um objeto <code>Livro</code>? Por padrão, o Python mostrará algo como <code>&lt;__main__.Book object at 0x...&gt;</code>, que não é muito informativo:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro1 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Primeiro Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor A"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">100</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<p>Isso vai imprimir algo como:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">__main__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Book </span><span class="token builtin" style="color:rgb(189, 147, 249)">object</span><span class="token plain"> at </span><span class="token number">0x7f8c1b0d0</span><span class="token operator">&gt;</span><br></span></code></pre></div></div>
<p>Se você está se perguntando se é possível personalizar essa saída, tornando a representação mais amigável ao usuário, sim, é! Você só precisa implementar o método mágico chamado <code>__str__</code> em sua classe. Esse método permite que você defina como seu objeto deve ser representado como uma <em>string</em>. Então, vamos fazer isso:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__init__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> titulo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> autor</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> paginas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo </span><span class="token operator">=</span><span class="token plain"> titulo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor </span><span class="token operator">=</span><span class="token plain"> autor</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas </span><span class="token operator">=</span><span class="token plain"> paginas</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__str__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)">f"</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string-interpolation interpolation">self</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token string-interpolation interpolation">titulo</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)"> por </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string-interpolation interpolation">self</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token string-interpolation interpolation">autor</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)">, </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string-interpolation interpolation">self</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token string-interpolation interpolation">paginas</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)"> páginas"</span><br></span></code></pre></div></div>
<p>Agora, quando você imprime um objeto <code>Livro</code>, ele exibirá o título, autor e contagem de páginas em um formato mais legível:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro1 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Primeiro Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor A"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">100</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: Primeiro Livro por Autor A, 100 páginas</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="__eq__-customizando-verificações-de-igualdade"><code>__eq__</code>: Customizando verificações de igualdade<a href="https://tchez.dev/pt/blog/dunder-methods#__eq__-customizando-verifica%C3%A7%C3%B5es-de-igualdade" class="hash-link" aria-label="Link direto para __eq__-customizando-verificações-de-igualdade" title="Link direto para __eq__-customizando-verificações-de-igualdade">​</a></h3>
<p>E se você quiser verificar se dois objetos <code>Livro</code> são considerados iguais? Por padrão, o Python verifica se eles são o mesmo objeto na memória, o que pode não ser o que você deseja. Para personalizar esse comportamento, você pode implementar o método <code>__eq__</code>:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__init__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> titulo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> autor</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> paginas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo </span><span class="token operator">=</span><span class="token plain"> titulo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor </span><span class="token operator">=</span><span class="token plain"> autor</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas </span><span class="token operator">=</span><span class="token plain"> paginas</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__eq__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> other</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo </span><span class="token operator">==</span><span class="token plain"> other</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">and</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor </span><span class="token operator">==</span><span class="token plain"> other</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">and</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas </span><span class="token operator">==</span><span class="token plain"> other</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<p>Agora, você pode comparar a igualdade de dois objetos <code>Livro</code> com base em seus atributos:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro1 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Primeiro Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor A"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">100</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro2 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Segundo Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor B"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">200</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro3 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Primeiro Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor A"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">100</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1 </span><span class="token operator">==</span><span class="token plain"> livro2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1 </span><span class="token operator">==</span><span class="token plain"> livro3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">__eq__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: True</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="__len__-customizando-verificações-de-comprimento"><code>__len__</code>: Customizando verificações de comprimento<a href="https://tchez.dev/pt/blog/dunder-methods#__len__-customizando-verifica%C3%A7%C3%B5es-de-comprimento" class="hash-link" aria-label="Link direto para __len__-customizando-verificações-de-comprimento" title="Link direto para __len__-customizando-verificações-de-comprimento">​</a></h3>
<p>E se você quiser verificar quantas páginas um livro tem? Você pode verificar manualmente o atributo <code>paginas</code>, mas também pode implementar o método <code>__len__</code> para permitir o uso da função embutida <code>len()</code>:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__init__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> titulo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> autor</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> paginas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo </span><span class="token operator">=</span><span class="token plain"> titulo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor </span><span class="token operator">=</span><span class="token plain"> autor</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas </span><span class="token operator">=</span><span class="token plain"> paginas</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__len__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas</span><br></span></code></pre></div></div>
<p>Agora, você pode usar a função <code>len()</code> em um objeto <code>Livro</code>:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro1 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Primeiro Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor A"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">100</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">len</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: 100</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="__getitem__-customizando-o-acesso-a-itens"><code>__getitem__</code>: Customizando o acesso a itens<a href="https://tchez.dev/pt/blog/dunder-methods#__getitem__-customizando-o-acesso-a-itens" class="hash-link" aria-label="Link direto para __getitem__-customizando-o-acesso-a-itens" title="Link direto para __getitem__-customizando-o-acesso-a-itens">​</a></h3>
<p>Por último, e se você quiser acessar um atributo específico de um objeto <code>Livro</code> usando indexação, como <code>livro[0]</code> para o título? Você pode implementar o método <code>__getitem__</code>:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__init__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> titulo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> autor</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> paginas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo </span><span class="token operator">=</span><span class="token plain"> titulo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor </span><span class="token operator">=</span><span class="token plain"> autor</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas </span><span class="token operator">=</span><span class="token plain"> paginas</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">__getitem__</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> index </span><span class="token operator">==</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">titulo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">elif</span><span class="token plain"> index </span><span class="token operator">==</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">autor</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">elif</span><span class="token plain"> index </span><span class="token operator">==</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">paginas</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">raise</span><span class="token plain"> IndexError</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Índice fora do alcance"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<p>Agora, você pode acessar o título, autor e páginas de um objeto <code>Livro</code> usando indexação:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">livro1 </span><span class="token operator">=</span><span class="token plain"> Livro</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Primeiro Livro"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Autor A"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">100</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: Primeiro Livro</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: Autor A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">livro1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Isso vai imprimir: 100</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusão">Conclusão<a href="https://tchez.dev/pt/blog/dunder-methods#conclus%C3%A3o" class="hash-link" aria-label="Link direto para Conclusão" title="Link direto para Conclusão">​</a></h2>
<p>Esses foram apenas alguns exemplos que destacam o poder e a flexibilidade dos dunder methods em Python. Com eles, você pode moldar o comportamento de suas classes e objetos de maneiras que se alinham com a sintaxe e os paradigmas da linguagem, tornando seu código mais intuitivo e 'Pythonico'.</p>
<p>Então, da próxima vez que você estiver projetando uma classe Python, lembre-se da magia dos dunder methods e de como eles podem enriquecer suas abstrações!</p>
<p>Abaixo, deixarei uma lista de alguns dos dunder methods mais usados em Python, cada um vinculado à documentação oficial:</p>
<ul>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__init__" target="_blank" rel="noopener noreferrer"><code>__init__</code></a>: O método construtor, chamado quando um objeto é criado.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__add__" target="_blank" rel="noopener noreferrer"><code>__add__</code></a>: Define o comportamento do operador de adição (<code>+</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__contains__" target="_blank" rel="noopener noreferrer"><code>__contains__</code></a>: Define o comportamento do operador <code>in</code> para um objeto.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" target="_blank" rel="noopener noreferrer"><code>__str__</code></a>: Define a representação em string de um objeto, usada pela função <code>print()</code>.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__eq__" target="_blank" rel="noopener noreferrer"><code>__eq__</code></a>: Define o comportamento do operador de igualdade (<code>==</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__len__" target="_blank" rel="noopener noreferrer"><code>__len__</code></a>: Define o comportamento da função <code>len()</code> para um objeto.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" target="_blank" rel="noopener noreferrer"><code>__getitem__</code></a>: Define o comportamento da indexação de um objeto (por exemplo, <code>obj[key]</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__setitem__" target="_blank" rel="noopener noreferrer"><code>__setitem__</code></a>: Define o comportamento de definir um item em um objeto (por exemplo, <code>obj[key] = value</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__delitem__" target="_blank" rel="noopener noreferrer"><code>__delitem__</code></a>: Define o comportamento de deletar um item de um objeto (por exemplo, <code>del obj[key]</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" target="_blank" rel="noopener noreferrer"><code>__repr__</code></a>: Define a representação oficial de um objeto, usada pela função <code>repr()</code>.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__ne__" target="_blank" rel="noopener noreferrer"><code>__ne__</code></a>: Define o comportamento do operador de desigualdade (<code>!=</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__lt__" target="_blank" rel="noopener noreferrer"><code>__lt__</code></a>: Define o comportamento do operador menor que (<code>&lt;</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__le__" target="_blank" rel="noopener noreferrer"><code>__le__</code></a>: Define o comportamento do operador menor ou igual a (<code>&lt;=</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__gt__" target="_blank" rel="noopener noreferrer"><code>__gt__</code></a>: Define o comportamento do operador maior que (<code>&gt;</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__ge__" target="_blank" rel="noopener noreferrer"><code>__ge__</code></a>: Define o comportamento do operador maior ou igual a (<code>&gt;=</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__sub__" target="_blank" rel="noopener noreferrer"><code>__sub__</code></a>: Define o comportamento do operador de subtração (<code>-</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__mul__" target="_blank" rel="noopener noreferrer"><code>__mul__</code></a>: Define o comportamento do operador de multiplicação (<code>*</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__truediv__" target="_blank" rel="noopener noreferrer"><code>__truediv__</code></a>: Define o comportamento do operador de divisão verdadeira (<code>/</code>).</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__bool__" target="_blank" rel="noopener noreferrer"><code>__bool__</code></a>: Define o valor de verdade de um objeto, usado pela função <code>bool()</code>.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__iter__" target="_blank" rel="noopener noreferrer"><code>__iter__</code></a>: Define o comportamento de um objeto quando usado em um loop ou com a função <code>iter()</code>.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__next__" target="_blank" rel="noopener noreferrer"><code>__next__</code></a>: Define o comportamento da função <code>next()</code> para um objeto, permitindo que ele seja iterável.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__enter__" target="_blank" rel="noopener noreferrer"><code>__enter__</code></a>: Define o comportamento de um objeto quando usado em uma instrução <code>with</code>, permitindo que ele configure um contexto.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__exit__" target="_blank" rel="noopener noreferrer"><code>__exit__</code></a>: Define o comportamento de um objeto ao sair de uma instrução <code>with</code>, permitindo que ele limpe recursos.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__hash__" target="_blank" rel="noopener noreferrer"><code>__hash__</code></a>: Define o comportamento da função <code>hash()</code> para um objeto, permitindo que ele seja usado em coleções baseadas em hash, como conjuntos e dicionários.</li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__del__" target="_blank" rel="noopener noreferrer"><code>__del__</code></a>: Define o comportamento de um objeto quando está prestes a ser destruído, permitindo ações de limpeza.</li>
</ul>
<p>Espero que este artigo tenha esclarecido um pouco sobre o fascinante mundo dos dunder methods em Python. Se você tiver alguma dúvida ou quiser compartilhar suas experiências com dunder methods, sinta-se à vontade para entrar em contato!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="referências">Referências<a href="https://tchez.dev/pt/blog/dunder-methods#refer%C3%AAncias" class="hash-link" aria-label="Link direto para Referências" title="Link direto para Referências">​</a></h2>
<ul>
<li><a href="https://docs.python.org/3/reference/datamodel.html" target="_blank" rel="noopener noreferrer">Python Official Documentation - Data Model</a></li>
<li><a href="https://mathspp.com/blog/pydonts/dunder-methods" target="_blank" rel="noopener noreferrer">Dunder methods | Pydon't 🐍</a></li>
<li><a href="https://nitesh-yadav.medium.com/dunder-methods-in-python-really-crazy-functions-3455ecb6472d" target="_blank" rel="noopener noreferrer">Dunder methods in Python, really crazy functions</a></li>
</ul>]]></content:encoded>
            <category>python</category>
            <category>programação</category>
            <category>artigo</category>
        </item>
        <item>
            <title><![CDATA[Bem‑vindo ao Brain Blog 🎉]]></title>
            <link>https://tchez.dev/pt/blog/welcome</link>
            <guid>https://tchez.dev/pt/blog/welcome</guid>
            <pubDate>Sun, 04 May 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Meu espaço pessoal para compartilhar ideias e despejar conhecimento estruturado.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Brain&nbsp;Blog" src="https://tchez.dev/pt/assets/images/logo-og-2f341927a68b033b11836f1447dc586f.png" width="1200" height="630" class="img_ev3q"></p>
<p>Olá, mundo! 👋</p>
<p>Sou <a href="https://www.linkedin.com/in/tchez" target="_blank" rel="noopener noreferrer">Marco&nbsp;Antônio</a> e este é o meu <strong>Brain&nbsp;Blog</strong>.</p>
<p>Esta publicação é uma explicação do que você vai encontrar por aqui.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="por-que-brainblog">Por que “Brain&nbsp;Blog”?<a href="https://tchez.dev/pt/blog/welcome#por-que-brainblog" class="hash-link" aria-label="Link direto para Por que “Brain&nbsp;Blog”?" title="Link direto para Por que “Brain&nbsp;Blog”?">​</a></h3>
<blockquote>
<p><em>“Quem ensina aprende ao ensinar. E quem aprende ensina ao aprender.”</em>
— Paulo Freire</p>
</blockquote>
<p>A ideia do Brain&nbsp;Blog é fazer um 'backup' do meu cérebro, onde anoto meus estudos, organizo referências e documento minhas jornadas de aprendizado.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="estrutura-do-conteúdo">Estrutura do conteúdo<a href="https://tchez.dev/pt/blog/welcome#estrutura-do-conte%C3%BAdo" class="hash-link" aria-label="Link direto para Estrutura do conteúdo" title="Link direto para Estrutura do conteúdo">​</a></h3>
<!-- -->
<div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">Blog</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Notas</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><br><blockquote>
<p>Meu espaço pessoal para compartilhar ideias e conhecimento.</p>
</blockquote><p>Aqui você encontrará artigos, tutoriais e reflexões sobre temas que me interessam. Compartilharei também experiências e aprendizados que considero relevantes.</p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><br><blockquote>
<p>Meu espaço pessoal para organizar conhecimento.</p>
</blockquote><p>Aqui você encontrará anotações, resumos e referências sobre temas que estou estudando. O objetivo é criar um repositório de conhecimento que possa ser útil para mim e para outras pessoas.</p><p>As notas estão divididas em três categorias:</p><ul>
<li><strong><a href="https://tchez.dev/pt/notes/foundations/intro">Fundamentos</a></strong>: explicações de fundamentos de programação, como algoritmos, protocolos, linguagens, etc.</li>
<li><strong><a href="https://tchez.dev/pt/notes/projects/intro">Projetos</a></strong>: anotações sobre projetos que estou desenvolvendo ou ideias que estou explorando.</li>
<li><strong><a href="https://tchez.dev/pt/notes/journeys/intro">Jornadas</a></strong>: cada jornada documenta o processo de aprendizado de um tema específico, com links para referências e anotações dos materiais estudados.</li>
</ul></div></div></div>]]></content:encoded>
            <category>blog</category>
        </item>
    </channel>
</rss>